{"version":3,"sources":["01.UI-Elements/ListItem.js","02.Components/List.js","01.UI-Elements/InputForm.js","App.js","hooks/useList.js","styles/GlobalStyle.js","index.js"],"names":["ListItem","title","isChecked","onToggle","ListItemStyled","checked","CheckboxStyled","type","color","onChange","TitleStyled","styled","label","props","Checkbox","span","List","list","currywurst","toggleIsChecked","allIds","length","ListStyled","map","id","byId","div","InputForm","addListItem","onSubmit","event","preventDefault","formElement","target","input","elements","value","reset","InputFormStyled","AddIconStyled","InputFieldStyled","name","placeholder","AddIcon","App","useState","setList","uncheckedIds","setUncheckedIds","checkedIds","setCheckedIds","generatedId","uuid","filter","checkedId","console","log","useList","createGlobalStyle","ReactDOM","render","StrictMode","GlobalStyle","document","getElementById"],"mappings":"wOAUe,SAASA,EAAT,GAAmD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SACnD,OACE,eAACC,EAAD,CAAgBC,QAASH,EAAzB,UACE,cAACI,EAAD,CACEC,KAAK,WACLC,MAAM,UACNH,QAASH,EACTO,SAAUN,IAEZ,cAACO,EAAD,UAAcT,OAKpB,IAAMG,EAAiBO,IAAOC,MAAV,2EAAGD,CAAH,sEAGC,SAACE,GAAD,OAAYA,EAAMR,QAAU,eAAiB,UACrD,SAACQ,GAAD,OAAYA,EAAMR,QAAU,GAAM,KAEzCC,EAAiBK,YAAOG,KAAV,2EAAGH,CAAH,MAGdD,EAAcC,IAAOI,KAAV,wEAAGJ,CAAH,sBCxBF,SAASK,EAAT,GAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,gBAC/C,OACE,mCACGF,EAAKG,OAAOC,OAAS,GACpB,cAACC,EAAD,UACGJ,EAAWK,KAAI,SAACC,GAAQ,IAAD,EACOP,EAAKQ,KAAKD,GAA/BvB,EADc,EACdA,MAAOC,EADO,EACPA,UACf,OACE,cAACF,EAAD,CAEEC,MAAOA,EACPC,UAAWA,EACXC,SAAU,kBAAMgB,EAAgBK,KAH3BA,UAarB,IAAMF,EAAaX,IAAOe,IAAV,mEAAGf,CAAH,uC,iBCvBD,SAASgB,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAClC,OACE,sBAAMC,SAWR,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OACpBC,EAAQF,EAAYG,SAASlC,MACnC2B,EAAYM,EAAME,OAClBJ,EAAYK,SAhBZ,SACE,eAACC,EAAD,WACE,cAACC,EAAD,IACA,cAACC,EAAD,CACEC,KAAK,QACLlC,KAAK,OACLmC,YAAY,uBActB,IAAMJ,EAAkB3B,IAAOC,MAAV,gFAAGD,CAAH,uDAKf4B,EAAgB5B,YAAOgC,KAAV,8EAAGhC,CAAH,oBAGb6B,EAAmB7B,IAAOuB,MAAV,iFAAGvB,CAAH,uFCjCP,SAASiC,IAAO,IAAD,ECFf,WAAoB,IAAD,EACRC,mBAAS,CAC/BpB,KAAM,GACNL,OAAQ,KAHsB,mBACzBH,EADyB,KACnB6B,EADmB,OAMQD,mBAAS,IANjB,mBAMzBE,EANyB,KAMXC,EANW,OAOIH,mBAAS,IAPb,mBAOzBI,EAPyB,KAObC,EAPa,KAShC,MAAO,CACLjC,OACAW,YAMF,SAAqB3B,GACnB,IAAMkD,EAAcC,cACpBN,EAAQ,CACNrB,KAAK,2BACAR,EAAKQ,MADN,kBAED0B,EAAc,CACb3B,GAAI2B,EACJlD,QACAC,WAAW,KAGfkB,OAAO,GAAD,mBAAMH,EAAKG,QAAX,CAAmB+B,MAE3BH,EAAgB,GAAD,mBAAKD,GAAL,CAAmBI,MAlBlChC,gBAqBF,SAAyBK,GACvBsB,EAAQ,CACNrB,KAAK,2BACAR,EAAKQ,MADN,kBAEDD,EAFC,2BAESP,EAAKQ,KAAKD,IAFnB,IAEwBtB,WAAYe,EAAKQ,KAAKD,GAAItB,cAEtDkB,OAAO,YAAKH,EAAKG,UAMnB8B,GAC8B,IAA5BjC,EAAKQ,KAAKD,GAAItB,UAAd,sBACQ+C,GADR,CACoBzB,IADpB,YAEQyB,EAAWI,QAAO,SAACC,GAAD,OAAeA,IAAc9B,OAEzDwB,GAC8B,IAA5B/B,EAAKQ,KAAKD,GAAItB,UAAd,sBACQ6C,GADR,CACsBvB,IADtB,YAEQuB,EAAaM,QAAO,SAACC,GAAD,OAAeA,IAAc9B,OAM3D+B,QAAQC,IAAI,eAAgBP,GAC5BM,QAAQC,IAAI,iBAAkBT,IA/C9BA,eACAE,cDLEQ,GALFxC,EAF0B,EAE1BA,KACAW,EAH0B,EAG1BA,YACAT,EAJ0B,EAI1BA,gBACA4B,EAL0B,EAK1BA,aACAE,EAN0B,EAM1BA,WAEF,OACE,gCACE,cAACjC,EAAD,CACEC,KAAMA,EACNC,WAAY6B,EACZ5B,gBAAiBA,IAEnB,cAACQ,EAAD,CAAWC,YAAaA,IACxB,cAACZ,EAAD,CACEC,KAAMA,EACNC,WAAY+B,EACZ9B,gBAAiBA,O,+dEtBVuC,kBAAf,KCGAC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACC,EAAD,IACA,cAAClB,EAAD,OAEFmB,SAASC,eAAe,W","file":"static/js/main.67e1bc5c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool,\n  onToggle: PropTypes.func,\n}\n\nexport default function ListItem({ title, isChecked, onToggle }) {\n  return (\n    <ListItemStyled checked={isChecked}>\n      <CheckboxStyled\n        type=\"checkbox\"\n        color=\"default\"\n        checked={isChecked}\n        onChange={onToggle}\n      />\n      <TitleStyled>{title}</TitleStyled>\n    </ListItemStyled>\n  )\n}\n\nconst ListItemStyled = styled.label`\n  display: flex;\n  align-items: center;\n  text-decoration: ${(props) => (props.checked ? 'line-through' : 'none')};\n  opacity: ${(props) => (props.checked ? 0.5 : 1)};\n`\nconst CheckboxStyled = styled(Checkbox)`\n  /* opacity: ${(props) => (props.checked ? 0.8 : 1)}; */\n`\nconst TitleStyled = styled.span`\n  margin-left: 9px;\n`\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\n\nimport ListItem from '../01.UI-Elements/ListItem'\n\nList.propTypes = {\n  list: PropTypes.object.isRequired,\n}\n\nexport default function List({ list, currywurst, toggleIsChecked }) {\n  return (\n    <>\n      {list.allIds.length > 0 && (\n        <ListStyled>\n          {currywurst.map((id) => {\n            const { title, isChecked } = list.byId[id]\n            return (\n              <ListItem\n                key={id}\n                title={title}\n                isChecked={isChecked}\n                onToggle={() => toggleIsChecked(id)}\n              />\n            )\n          })}\n        </ListStyled>\n      )}\n    </>\n  )\n}\n\nconst ListStyled = styled.div`\n  display: grid;\n  /* gap: 12px; */\n  margin: 3px 2px 10px;\n`\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components/macro'\nimport AddIcon from '@material-ui/icons/Add'\n\nInputForm.propTypes = {\n  addListItem: PropTypes.func.isRequired,\n}\n\nexport default function InputForm({ addListItem }) {\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputFormStyled>\n        <AddIconStyled />\n        <InputFieldStyled\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Listeneintrag\"\n        />\n      </InputFormStyled>\n    </form>\n  )\n  function handleSubmit(event) {\n    event.preventDefault()\n    const formElement = event.target\n    const input = formElement.elements.title\n    addListItem(input.value)\n    formElement.reset()\n  }\n}\n\nconst InputFormStyled = styled.label`\n  margin-left: 10px;\n  display: flex;\n  align-items: center;\n`\nconst AddIconStyled = styled(AddIcon)`\n  color: #878889;\n`\nconst InputFieldStyled = styled.input`\n  margin-left: 15px;\n  border: none;\n\n  &::placeholder {\n    color: #b2b2b2;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n","import useList from './hooks/useList'\n\nimport List from './02.Components/List'\nimport InputForm from './01.UI-Elements/InputForm'\n\nexport default function App() {\n  const {\n    list,\n    addListItem,\n    toggleIsChecked,\n    uncheckedIds,\n    checkedIds,\n  } = useList()\n  return (\n    <div>\n      <List\n        list={list}\n        currywurst={uncheckedIds}\n        toggleIsChecked={toggleIsChecked}\n      />\n      <InputForm addListItem={addListItem} />\n      <List\n        list={list}\n        currywurst={checkedIds}\n        toggleIsChecked={toggleIsChecked}\n      />\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport default function useList() {\n  const [list, setList] = useState({\n    byId: {},\n    allIds: [],\n  })\n\n  const [uncheckedIds, setUncheckedIds] = useState([])\n  const [checkedIds, setCheckedIds] = useState([])\n\n  return {\n    list,\n    addListItem,\n    toggleIsChecked,\n    uncheckedIds,\n    checkedIds,\n  }\n\n  function addListItem(title) {\n    const generatedId = uuid()\n    setList({\n      byId: {\n        ...list.byId,\n        [generatedId]: {\n          id: generatedId,\n          title,\n          isChecked: false,\n        },\n      },\n      allIds: [...list.allIds, generatedId],\n    })\n    setUncheckedIds([...uncheckedIds, generatedId])\n  }\n\n  function toggleIsChecked(id) {\n    setList({\n      byId: {\n        ...list.byId,\n        [id]: { ...list.byId[id], isChecked: !list.byId[id].isChecked },\n      },\n      allIds: [...list.allIds],\n    })\n    // setUncheckedIds()\n\n    // list.byId[id].isChecked === false\n\n    setCheckedIds(\n      list.byId[id].isChecked === false //when item moves down\n        ? [...checkedIds, id]\n        : [...checkedIds.filter((checkedId) => checkedId === id)]\n    )\n    setUncheckedIds(\n      list.byId[id].isChecked === false\n        ? [...uncheckedIds, id]\n        : [...uncheckedIds.filter((checkedId) => checkedId === id)]\n    )\n    // setCheckedIds([...checkedIds.filter((checkedId) => checkedId === id)])\n    /* setUncheckedIds([\n      ...uncheckedIds.filter((uncheckedId) => uncheckedId !== id),\n    ]) */\n    console.log('checkedIds: ', checkedIds)\n    console.log('uncheckedIds: ', uncheckedIds)\n  }\n}\n","import { createGlobalStyle } from 'styled-components/macro'\n\nexport default createGlobalStyle`\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    width: 100%;\n    max-width: 450px;\n    padding: 30px;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1em;\n    font-weight: 400;\n    color: #212121;\n    }\n\ninput, textarea, button, select, link, textarea {\n    font-family: inherit;\n    font-weight: inherit;\n    color: inherit;\n    font-size: inherit;\n}\n\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport GlobalStyle from './styles/GlobalStyle'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}